{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anirudh\\\\Documents\\\\Personal projects\\\\Job Search\\\\client\\\\src\\\\components\\\\JobPostingCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobPostingCard() {\n  _s();\n  const [Jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get('http://localhost:3001/showJobs').then(res => {\n      console.log(res.data);\n      setJobs(res.data.data); // Assuming the job data is returned as an array within the 'data' property\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching job data:\", err);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Jobs: \", Jobs.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), Jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(JobPostingCard, \"JEyvpzqvKVJ7soNRYd23Cs5RVH4=\");\n_c = JobPostingCard;\nexport default JobPostingCard;\nvar _c;\n$RefreshReg$(_c, \"JobPostingCard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","JobPostingCard","_s","Jobs","setJobs","loading","setLoading","get","then","res","console","log","data","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","title","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/Anirudh/Documents/Personal projects/Job Search/client/src/components/JobPostingCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction JobPostingCard() {\r\n  const [Jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/showJobs')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        setJobs(res.data.data); // Assuming the job data is returned as an array within the 'data' property\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error fetching job data:\", err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div>\r\n          <h2>Total Jobs: {Jobs.length}</h2>\r\n          {Jobs.map((job) => (\r\n            <div key={job._id}>\r\n              <h3>{job.title}</h3>\r\n              <p>{job.description}</p>\r\n              {/* Add more job properties here if needed */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobPostingCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBR,OAAO,CAACK,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACxBN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAI;MACZJ,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;MAC9CR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAgB,QAAA,EACGX,OAAO,gBACNL,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAI,cAAY,EAACb,IAAI,CAACkB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACjCjB,IAAI,CAACmB,GAAG,CAAEC,GAAG,iBACZvB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAKO,GAAG,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,EAAIO,GAAG,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhBG,GAAG,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAnCQD,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}